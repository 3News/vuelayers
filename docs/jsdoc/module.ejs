<%
/* global _, doclets */
const nameToIdent = string => string.replace(/^module:/, '').replace('/', '-').toLowerCase()

let mainDoclet = doclets.find(({name, longname}) => name === longname)
let ident = nameToIdent(mainDoclet.name)
let longIdent = nameToIdent(mainDoclet.longname)
let cmpName = `vld-${longIdent}-doc`
let description = mainDoclet.description

// examples
let examples = (mainDoclet.examples || []).map(function (example) {
  let caption, code, lang = ''
  let match = example.match(/^\s*(?:<caption>)?([^[\]\n\r]+?)?(?:<\/caption>)?(?:\s*\[([\w]*)])?[\n\r]([\s\S]+)$/i)

  if (match) {
    caption = match[1] || 'Example'
    lang = match[2] || ''
    code = match[3] || ''
  }

  return `<vld-code title="${caption}" lang="${lang}">${_.escape(code)}</vld-code>`
})

let vueExamples = (mainDoclet.vueExamples || []).map(function (example) {
  let caption, code, lang = ''
  let match = example.match(/^\s*(?:<caption>)?([^[\]\n\r]+?)?(?:<\/caption>)?(?:\s*\[([\w]*)])?[\n\r]([\s\S]+)$/i)

  if (match) {
    caption = match[1] || 'Example'
    lang = match[2] || ''
    code = match[3] || ''
  }

  return `
<b class="title">${caption}</b>
<b-tabs>
  <b-tab-item label="Source">
    <vld-code lang="${lang}">${_.escape(code)}</vld-code>
  </b-tab-item>
  <b-tab-item label="Result">
    ${code}
  </b-tab-item>
</b-tabs>`
})
%>

<template>
  <div id="<%= longIdent %>" :class="$options.name" class="content">
    <% if (mainDoclet.title) { %>
    <h3><%= mainDoclet.title %></h3>
    <% } %>

    <%= description %>

    <% examples.forEach(function (example) { %>
      <%= example %>
    <% }) %>

    <% vueExamples.forEach(function (example) { %>
      <%= example %>
    <% }) %>
  </div>
</template>

<script>
  export default {
    name: '<%= cmpName %>',
    computed: {
      ident () {
        return '<%= ident %>'
      },
      longIdent () {
        return '<%= longIdent %>'
      },
      mainDoclet () {
        return <%= JSON.stringify(mainDoclet) %>
      },
      doclets () {
        return <%= JSON.stringify(doclets) %>
      },
    },
    methods: {
    },
  }
</script>

<style lang="sass">
  @import ../styles/variables
</style>
